# kind: PersistentVolume
# apiVersion: v1
# metadata:
#   name: jenkins
#   labels:
#     type: local
# spec:
#   capacity:
#     storage: 2Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/data/jenkins/"

# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: jenkins-claim
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 2Gi
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: jenkins
#   labels:
#     app: jenkins
# spec:
#   ports:
#     - port: 80
#       targetPort: 8080
#   selector:
#     app: jenkins
#     tier: jenkins
#   type: NodePort
# ---
# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#   name: jenkins
#   labels:
#     app: jenkins
# spec:
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app: jenkins
#         tier: jenkins
#     spec:
#       containers:
#       - image: chadmoon/jenkins-docker-kubectl:latest
#         name: jenkins
#         securityContext:
#           privileged: true
#         ports:
#         - containerPort: 8080
#           name: jenkins
#         volumeMounts:
#         - name: jenkins-persistent-storage
#           mountPath: /root/.jenkins
#         - name: docker
#           mountPath: /var/run/docker.sock
#       volumes:
#       - name: docker
#         hostPath:
#           path: /var/run/docker.sock
#       - name: jenkins-persistent-storage
#         persistentVolumeClaim:
#           claimName: jenkins-claim

kind: PersistentVolume
apiVersion: v1
metadata:
  name: jenkins
  labels:
    type: local
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/jenkins/"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: jenkins
    tier: jenkins
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
      tier: jenkins
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
        tier: jenkins
    spec:
      containers:
      - name: jenkins
        # image: chadmoon/jenkins-docker-kubectl:latest
        # image: jenkins/jenkins:lts-jdk11
        # build: ./applications/jenkins_dind/Dockerfile
        # image: dd348ac7294
        image: "127.0.0.1:30400/jenkins:lastest"

        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: jenkins
        volumeMounts:
        - name: jenkins-persistent-storage
          mountPath: /var/jenkins_home
        - name: docker-sock
          mountPath: /var/run/docker.sock
      volumes:
      - name: jenkins-persistent-storage
        persistentVolumeClaim:
          claimName: jenkins-claim
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: jenkins-plugins
        configMap:
          name: jenkins-plugins
