// node {

//     checkout scm

//     env.DOCKER_API_VERSION="1.23"
    
//     sh "git rev-parse --short HEAD > commit-id"

//     tag = readFile('commit-id').replace("\n", "").replace("\r", "")
//     appName = "monitor-scale"
//     registryHost = "127.0.0.1:30400/"
//     imageName = "${registryHost}${appName}:${tag}"
//     env.BUILDIMG=imageName

//     stage "Build"
    
//         sh "docker build -t ${imageName} applications/monitor-scale"
    
//     stage "Push"

//         sh "docker push ${imageName}"

//     stage "Deploy"

//         sh "sed 's#127.0.0.1:30400/monitor-scale:latest#'$BUILDIMG'#' applications/monitor-scale/k8s/deployment.yaml | kubectl apply -f -"
// }

pipeline {
    agent any
    environment {
        DOCKER_API_VERSION = "1.41"
        appName = "monitor-scale"
        registryHost = "127.0.0.1:30400/"
    }
    
    stages {
        stage("Checkout") {
            steps {
                checkout scm
                sh "git rev-parse --short HEAD > commit-id"
            }
        }
        stage("Build") {
            steps {
                script {
                    def tag = readFile('commit-id').trim()
                    def imageName = "${registryHost}${appName}:${tag}"
                    env.BUILDING = imageName
                    echo "Building image ${env.BUILDING}"
                    sh "docker build -t ${imageName} -f applications/monitor-scale/Dockerfile applications/monitor-scale"
                }
            }
        }
        stage("Push") {
            steps {
                script {
                    // sh "docker push ${registryHost}${appName}"
                    sh "docker push ${env.BUILDING}"
                }
            }
        }
        stage("Deploy") {
            steps {
                script {
                    // sh "sed 's#127.0.0.1:30400/kr8sswordz:latest#'$BUILDING'#' applications/kr8sswordz-pages/k8s/deployment.yaml | kubectl apply -f -"
                    sh "sed 's#127.0.0.1:30400/monitor-scale:latest#'$BUILDING'#' applications/monitor-scale/k8s/deployment.yaml | kubectl apply -f -"
                    sh "kubectl rollout status deployment/monitor-scale"
                }
            }
        }
    }
}